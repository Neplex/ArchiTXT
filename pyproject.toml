[tool.poetry]
name = "architxt"
version = "0.1.0"
description = ""
authors = [
    "Nicolas Hiot <nicolas.hiot@univ-orleans.fr>",
    "Mirian Halfeld-Ferrari <mirian@univ-orleans.fr>",
    "Jacques Chabin <jchabin@univ-orleans.fr>"
]
readme = "README.md"

[tool.poetry.scripts]
architxt = "architxt.cli:main"

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.dependencies]
python = "^3.10"

joblib = "^1.1"
tqdm = "*"
pqdm = "*"
nltk = "*"
chatette = ">=1.6.2"
unidecode = "*"
pytokenizations = "~0.8.0"
requests = "*"
numpy = "^1.26.0"
levenshtein = "*"
more-itertools = "*"
bratlib = { git = "https://github.com/swfarnsworth/bratlib.git" }
mlflow = "^2.6.0"
typer = "^0.12.0"
anyio = "^4.6.0"
ray = {extras = ["default"], version = "^2.30.0"}
streamlit = "^1.39.0"
streamlit-agraph = "*"
streamlit-tags = "*"
pynvml = "*"

[tool.poetry.group.dev.dependencies]
wheel = "^0.44.0"
devtools = "^0.12.0"
py-spy = "~0.3.14 "
pre-commit = "^3.8.0"

pylint = "^3.3"
mypy = ">=0.910,<1.14"
ruff = "^0.6.7"

pandas-stubs = "*"
types-tqdm = "*"
types-requests = "*"

[tool.poetry.group.test.dependencies]
pytest = "^7.2"
pytest-cov = "*"
pytest-xdist = "*"
pytest-mock = "*"
hypothesis = "^6.68.0"

# Async libs for tests
asyncio = "^3.4.0"
trio = "^0.27.0"

[tool.pytest.ini_options]
minversion = "7.0"
junit_family = "legacy"
testpaths = ["architxt", "test"]
addopts = ["--doctest-modules"]

[tool.coverage.run]
source = ["architxt/*"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.ruff]
target-version = "py310"
line-length = 120
src = ["architxt", "test"]

# Selective rules for auto-fixing and auto-formatting
[tool.ruff.lint]
select = [
    "E4", # Pycodestyle error codes that are safe to auto-fix
    "E7",
    "E9",
    "F", # Flake8 rules (includes many core Python errors and issues)
    "I", # isort rules for import ordering
    "ICN", # Import conventions
    "UP", # pyupgrade (for safe code modernization)
    "C4", # Comprehension simplifications
    "SIM", # Code simplifications
    "LOG", # Logger usage
    "PIE", # Miscs
    "RUF", # Ruff-specific auto-fixable rules
    "PD" , # Pandas checks
    "NPY", # NumPy checks
    "PERF", # Performance anti-pattern checks
    "FURB", # Check old Python code
]

[tool.ruff.format]
quote-style = "preserve"
